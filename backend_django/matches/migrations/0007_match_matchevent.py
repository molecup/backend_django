# Generated by Django 5.2.7 on 2025-10-28 16:11

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('matches', '0006_alter_localleague_name_alter_localleague_title_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Match',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Match date and time')),
                ('registration_required', models.BooleanField(default=False, verbose_name='Is registration available for this match?')),
                ('registration_link', models.URLField(blank=True, null=True, verbose_name='Registration link')),
                ('home_team_score_offset', models.SmallIntegerField(default=0, help_text='Adjust the displayed score for the home team by this offset (can be negative)', verbose_name='Home team score offset')),
                ('away_team_score_offset', models.SmallIntegerField(default=0, help_text='Adjust the displayed score for the away team by this offset (can be negative)', verbose_name='Away team score offset')),
                ('score_computation_mode', models.CharField(choices=[('EVENTS', 'Automatic from events'), ('OFFSET', 'Manual offset only'), ('SUM', 'Sum of events and offset')], default='EVENTS', help_text='Method to compute the displayed score', max_length=10, verbose_name='Score computation mode')),
                ('home_penalties', models.PositiveSmallIntegerField(default=0, help_text='Number of penalties scored by the home team', verbose_name='Home team penalties scored')),
                ('away_penalties', models.PositiveSmallIntegerField(default=0, help_text='Number of penalties scored by the away team', verbose_name='Away team penalties scored')),
                ('finished', models.BooleanField(default=False, verbose_name='Is the match finished?')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='away_matches', to='matches.team', verbose_name='Away team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='home_matches', to='matches.team', verbose_name='Home team')),
                ('stadium', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='matches', to='matches.stadium', verbose_name='Stadium where the match is played')),
            ],
            options={
                'verbose_name_plural': 'Matches',
            },
        ),
        migrations.CreateModel(
            name='MatchEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.PositiveSmallIntegerField(blank=True, help_text='Enter the minute of the event (0-120)', null=True, validators=[django.core.validators.MaxValueValidator(120, message='Minute cannot exceed 120'), django.core.validators.MinValueValidator(0, message='Minute must be at least 0')], verbose_name='Minute of the event')),
                ('event_type', models.CharField(choices=[('GOAL', 'Goal'), ('YELLOW_CARD', 'Yellow Card'), ('RED_CARD', 'Red Card')], default='GOAL', help_text='Select the type of event', max_length=15, verbose_name='Type of event')),
                ('team', models.CharField(choices=[('HOME', 'Home Team'), ('AWAY', 'Away Team')], help_text='Select whether the player belongs to the home or away team', max_length=5, verbose_name='Team of the player')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events', to='matches.match', verbose_name='Match to which the event belongs')),
                ('player', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='match_events', to='matches.player', verbose_name='Player involved in the event')),
            ],
        ),
    ]
